(function(){this.sync=function(method,object,options){var storage=LF.dataAccess,onSuccess,onError,clone;options||(options={});onSuccess=options.onSuccess||function(){};onError=options.onError||function(){};switch(method){case"read":if(object.length>=0){if(options.search){storage.transaction("fetchAll",{storage:object.storage},function(result){var output=[],search=options.search||{};_(result).each(function(item){var model=new object.model(item);model.decrypt();output.push(model.toJSON());});output=LF.Utilities.query(output,search);object.reset(output);onSuccess(object.models);},onError);}else{storage.transaction("fetchAll",{storage:object.storage},function(result){_(result).each(function(item){var model=new object.model(item);model.decrypt();object.add(model.toJSON());});onSuccess(object.models);},onError);}}else{if(options.search&&options.search.where){storage.transaction("fetchAll",{storage:object.storage},function(result){var output=[],search=options.search||{};_(result).each(function(item){var model=object.clone();model.set(item);model.decrypt();output.push(model.toJSON());});output=LF.Utilities.query(output,search);object.set(output[0]||{});onSuccess(object.attributes);},onError);}}break;case"create":clone=object.clone();storage.transaction("save",{storage:object.storage,data:clone.encrypt()},function(result){if(result){object.set({id:result});}onSuccess(result);},onError);break;case"update":clone=object.clone();storage.transaction("save",{storage:object.storage,data:clone.encrypt()},function(result){if(result){object.set({id:result});}onSuccess(result);});break;case"delete":if(object.length>=0){storage.transaction("removeAll",{storage:object.storage,data:object.pluck("id")},onSuccess,onError);}else{storage.transaction("remove",{storage:object.storage,data:{id:object.get("id")}},onSuccess,onError);}break;case"clear":storage.transaction("clear",object.storage,onSuccess,onError);break;case"count":storage.transaction("count",object.storage,onSuccess,onError);break;case"createStorage":storage.transaction("createStorage",{storage:object.storage,schema:object.schema},onSuccess,onError);break;case"removeStorage":storage.transaction("removeStorage",{storage:[object.storage]},onSuccess,onError);break;case"checkInstall":storage.transaction("checkInstall",{storage:object.storage},onSuccess,onError);break;}};}).call(Backbone);