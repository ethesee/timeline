(function(Backbone,_){var extend=Backbone.Router.extend;Backbone.Router.extend=function(){var child=extend.apply(this,arguments),childProto=child.prototype,parentProto=this.prototype;_.each(["before","after"],function(filter){_.defaults(childProto[filter],parentProto[filter]);});return child;};_.extend(Backbone.Router.prototype,{route:function(route,name,callback){if(!_.isRegExp(route)){route=this._routeToRegExp(route);}if(_.isFunction(name)){callback=name;name="";}if(!callback){callback=this[name];}var router=this;Backbone.history||(Backbone.history=new Backbone.History);Backbone.history.route(route,function(fragment){var args=router._extractParameters(route,fragment);runFilters(router,router.before,fragment,args,function(){if(callback){callback.apply(router,args);}router.trigger.apply(router,["route:"+name].concat(args));router.trigger("route",name,args);Backbone.history.trigger("route",router,name,args);runFilters(router,router.after,fragment,args,function(){});});});return this;}});function runFilters(router,filters,fragment,args,callback){var chain=_.filter(filters,function(callback,filter){filter=_.isRegExp(filter)?filter:router._routeToRegExp(filter);return filter.test(fragment);});run(chain,router,fragment,args,callback);}function run(chain,router,fragment,args,callback){if(!chain.length){callback.call(router);return;}var current=chain[0],tail=_.tail(chain),next=function(){run(tail,router,fragment,args,callback);};if(_.isString(current)){current=router[current];}if(current.length===3){current.apply(router,[fragment,args,next]);}else{if(current.apply(router,[fragment,args])!==false){next();}}}})(Backbone,_);